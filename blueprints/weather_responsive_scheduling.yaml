blueprint:
  name: Smart Irrigation Weather-Responsive Scheduling
  description: >-
    Advanced weather-responsive irrigation scheduling that adapts to 
    seasonal conditions and weather forecasts.
  domain: automation
  input:
    smart_irrigation_zones:
      name: Smart Irrigation Zones
      description: Select the Smart Irrigation zone entities to control
      selector:
        entity:
          domain: sensor
          integration: smart_irrigation
          multiple: true
    weather_entity:
      name: Weather Entity
      description: Weather entity for forecast checking
      selector:
        entity:
          domain: weather
    rain_sensor:
      name: Rain Sensor (Optional)
      description: Rain sensor to skip irrigation when raining
      required: false
      selector:
        entity:
          domain: binary_sensor
    temperature_threshold:
      name: Temperature Threshold
      description: Skip irrigation if temperature is below this value
      default: 5
      selector:
        number:
          min: -10
          max: 30
          unit_of_measurement: "°C"
    wind_threshold:
      name: Wind Speed Threshold
      description: Skip irrigation if wind speed is above this value
      default: 25
      selector:
        number:
          min: 0
          max: 100
          unit_of_measurement: "km/h"
    seasonal_multiplier_spring:
      name: Spring Multiplier
      description: Irrigation multiplier for spring months (Mar-May)
      default: 1.2
      selector:
        number:
          min: 0.5
          max: 2.0
          step: 0.1
    seasonal_multiplier_summer:
      name: Summer Multiplier
      description: Irrigation multiplier for summer months (Jun-Aug)
      default: 1.5
      selector:
        number:
          min: 0.5
          max: 3.0
          step: 0.1
    seasonal_multiplier_autumn:
      name: Autumn Multiplier
      description: Irrigation multiplier for autumn months (Sep-Nov)
      default: 0.8
      selector:
        number:
          min: 0.1
          max: 2.0
          step: 0.1
    seasonal_multiplier_winter:
      name: Winter Multiplier
      description: Irrigation multiplier for winter months (Dec-Feb)
      default: 0.3
      selector:
        number:
          min: 0.1
          max: 1.0
          step: 0.1

trigger:
  - platform: event
    event_type: smart_irrigation_start_irrigation_all_zones
  - platform: event
    event_type: smart_irrigation_recurring_schedule_triggered
  - platform: time
    at: "06:00:00"

condition:
  # Check if it's not raining (if rain sensor is configured)
  - condition: or
    conditions:
      - condition: template
        value_template: "{{ rain_sensor == none }}"
      - condition: state
        entity_id: !input rain_sensor
        state: "off"

action:
  - variables:
      current_month: "{{ now().month }}"
      current_temp: "{{ state_attr(weather_entity, 'temperature') | float }}"
      current_wind: "{{ state_attr(weather_entity, 'wind_speed') | float }}"
      temp_threshold: !input temperature_threshold
      wind_threshold: !input wind_threshold
      
      # Determine seasonal multiplier
      seasonal_multiplier: >
        {% set month = current_month %}
        {% if month in [3, 4, 5] %}
          {{ seasonal_multiplier_spring }}
        {% elif month in [6, 7, 8] %}
          {{ seasonal_multiplier_summer }}
        {% elif month in [9, 10, 11] %}
          {{ seasonal_multiplier_autumn }}
        {% else %}
          {{ seasonal_multiplier_winter }}
        {% endif %}

  # Check weather conditions
  - condition: template
    value_template: "{{ current_temp >= temp_threshold }}"
  - condition: template
    value_template: "{{ current_wind <= wind_threshold }}"

  # Apply seasonal adjustments
  - service: smart_irrigation.create_seasonal_adjustment
    data:
      name: "Auto Seasonal Adjustment {{ now().strftime('%Y-%m') }}"
      enabled: true
      month_start: "{{ current_month }}"
      month_end: "{{ current_month }}"
      multiplier_adjustment: "{{ seasonal_multiplier }}"
      zones: "all"

  # Calculate zones with weather consideration
  - repeat:
      for_each: !input smart_irrigation_zones
      sequence:
        - variables:
            zone_entity: "{{ repeat.item }}"
            zone_id: "{{ state_attr(zone_entity, 'zone_id') }}"
        
        # Calculate the zone
        - service: smart_irrigation.calculate_zone
          target:
            entity_id: "{{ zone_entity }}"
        
        # Wait a moment for calculation to complete
        - delay:
            seconds: 2
        
        # Check if irrigation is needed
        - variables:
            duration: "{{ states(zone_entity) | int }}"
        
        - condition: template
          value_template: "{{ duration > 0 }}"
        
        # Log irrigation decision
        - service: logbook.log
          data:
            name: "Smart Irrigation Weather-Responsive"
            message: >
              Zone {{ state_attr(zone_entity, 'zone_name') }} irrigation: {{ duration }}s
              (Temp: {{ current_temp }}°C, Wind: {{ current_wind }} km/h, 
              Season multiplier: {{ seasonal_multiplier }})

  # Fire custom event for other automations
  - event: smart_irrigation_weather_responsive_completed
    event_data:
      zones: !input smart_irrigation_zones
      seasonal_multiplier: "{{ seasonal_multiplier }}"
      weather_conditions:
        temperature: "{{ current_temp }}"
        wind_speed: "{{ current_wind }}"
      timestamp: "{{ now().isoformat() }}"

mode: single